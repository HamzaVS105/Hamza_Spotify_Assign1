# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_zDKdYf_4xBtKY_eddvCLWgj1W8GrydK
"""

import pandas as pd
import numpy as np
from google.colab import files  # For downloading the file

# Load the dataset
df = pd.read_csv("/content/filtered_music_listening_data.csv")

# Convert Listening Time to total seconds
def listening_time_in_seconds(time_str):
    minutes, seconds = map(int, time_str.split(":"))
    return minutes * 60 + seconds

df["Listening Time (seconds)"] = df["Listening Time"].apply(listening_time_in_seconds)

# Group by Username and Track to calculate total listening time and frequency of listens
user_song_summary = df.groupby(["Username", "Track"]).agg(
    total_listening_time=("Listening Time (seconds)", "sum"),
    listen_count=("Listening Time (seconds)", "count")
).reset_index()

# Define a function to convert listening stats to ratings (scale: 1-5)
def calculate_rating(row):
    # Customize weights based on importance of listening time and frequency
    time_weight = 0.6
    frequency_weight = 0.4

    # Normalize each component to a range of 1-5
    time_rating = min(row['total_listening_time'] / 600, 5)  # assuming 600 seconds as max reference
    frequency_rating = min(row['listen_count'] / 10, 5)      # assuming 10 listens as max reference

    # Calculate final rating
    rating = (time_rating * time_weight) + (frequency_rating * frequency_weight)
    return round(rating, 1)

# Apply the rating calculation function
user_song_summary["Rating"] = user_song_summary.apply(calculate_rating, axis=1)

# Pivot into a user-song rating matrix
rating_matrix = user_song_summary.pivot(index="Username", columns="Track", values="Rating").fillna(0)

# Save the rating matrix to a CSV file in Colab environment
output_rating_matrix_path = "rating_matrix.csv"
rating_matrix.to_csv(output_rating_matrix_path)

print(f"Rating matrix saved to {output_rating_matrix_path}")

# Download the file
files.download(output_rating_matrix_path)

